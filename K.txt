What is namespace and how you create namespace ?

A namespace is a way to organize and separate resources in Kubernetes, like having different folders for different projects. To create a namespace, use the command 
`kubectl create namespace <namespace_name>`, where `<namespace_name>` is the name you choose for the new namespace. This helps keep your resources neatly organized and isolated 
from each other.
=======================================================================================================================================================================
How do you troubleshoot if pod get image pullback error?

If a pod gets an image pullback error, first check if the image name and tag are correct. Next, ensure you have access to the image registry and your credentials are set up
properly. Finally, inspect the pod's events or logs using `kubectl describe pod <pod_name>` for more details on the issue.

=======================================================================================================================================================================
what is the Command to check pod log?

To check a pod's logs, use the command `kubectl logs <pod_name>`. This shows the output from the container running in the pod. If your pod has multiple containers,
add `-c <container_name>` to specify which container's logs you want to view.

=======================================================================================================================================================================
what are the Deployment types in Kubernetes.

Kubernetes has several deployment types, including:

1. **RollingUpdate**: Gradually replaces old pods with new ones without downtime, like updating parts of a machine one by one.
2. **Recreate**: Stops all old pods and then creates new ones, causing a temporary downtime, like replacing an old machine entirely.
3. **Blue-Green Deployment**: Runs two versions of the app (blue and green), switching traffic between them to ensure smooth updates.

These methods help manage updates and rollbacks efficiently.
=======================================================================================================================================================================
What is Bluegreen and canary deployments?	

**Blue-Green Deployment** involves running two versions of an application, "blue" (current) and "green" (new), and switching traffic between them to ensure a
smooth transition with no downtime. **Canary Deployment** gradually rolls out the new version to a small subset of users first, allowing you to test and verify it
before a full-scale release. Both strategies help manage updates with minimal disruption.
=====================================================================================================================================================================
	Explain the deployment method you follow for code deployment

For code deployment, I often use **Rolling Updates** because they replace old versions of an application with new ones gradually. This method ensures that users experience minimal downtime and lets you monitor the new version's performance before completing the update. Itâ€™s like upgrading parts of a machine while keeping it running.
=====================================================================================================================================================================
What are the Steps involved in release management of application

Release management involves:

1. **Planning**: Decide what features or fixes will be included in the release and set a timeline.
2. **Development and Testing**: Develop the code and thoroughly test it to ensure it works correctly.
3. **Deployment and Monitoring**: Release the application to users and monitor its performance to catch any issues early.

These steps help ensure a smooth and successful application release.
=======================================================================================================================================================================
10 . What are the volume in Kubernetes.

In Kubernetes, a **volume** is a storage resource that containers use to store data persistently. It allows data to persist beyond the life of a single container and be shared among multiple containers. Think of it as a shared storage drive that containers can read from and write to.
=======================================================================================================================================================================
